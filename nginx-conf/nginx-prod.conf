events {}

http {
    # Enable gzip for faster responses
    gzip on;
    gzip_types text/plain application/json application/javascript text/css;

    # -------------------------------
    # WebSocket Server
    # -------------------------------
    server {
        listen 80;
        server_name socket.Sketch.io.xyz;

        access_log off; # Disable access logs
        error_log /var/log/nginx/ws.error.log warn; # Log only warnings and errors

        location / {
            proxy_pass http://localhost:8000;
            proxy_http_version 1.1;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;

            # ‚è± Prevent WebSocket disconnections on idle connections 
            # keep WebSocket alive for 30 mins to avoid disconnects during inactivity
            proxy_read_timeout 1800;
            proxy_send_timeout 1800;
        }
    }

    # -------------------------------
    # Backend API Server
    # -------------------------------
    server {
        listen 80;
        server_name server.Sketch.io.xyz;

        access_log off;
        error_log /var/log/nginx/backend.error.log warn;

        location / {
            proxy_pass http://localhost:9000;
            proxy_http_version 1.1;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }

    # -------------------------------
    # Frontend App (Next.js)
    # -------------------------------
    server {
        listen 80;
        server_name Sketch.io.xyz www.Sketch.io.xyz;

        access_log off;
        error_log /var/log/nginx/frontend.error.log warn;

        # Cache static files
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|otf|eot)$ {
            expires 7d;
            access_log off;
            proxy_pass http://localhost:3000;
        }

        location / {
            proxy_pass http://localhost:3000;
            proxy_http_version 1.1;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
}