# Docker Compose configuration for Sketch.io (Frontend, Backend, WebSocket, PostgreSQL)
services:
  frontend:
    build:
      context: .
      dockerfile: docker/frontend.prod.Dockerfile
      args:
        NEXT_PUBLIC_SITE_URL: http://localhost:3000
        NEXT_PUBLIC_HTTP_URL: http://localhost:9000
        NEXT_PUBLIC_WS_URL: ws://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_started
      websocket:
        condition: service_started
    environment:
      NEXT_PUBLIC_SITE_URL: http://localhost:3000
      NEXT_PUBLIC_HTTP_URL: http://localhost:9000
      NEXT_PUBLIC_WS_URL: ws://localhost:8000

  backend:
    build:
      context: .
      dockerfile: docker/backend.prod.Dockerfile
      args:
        DATABASE_URL: postgresql://yaqoob:secretpassword@database:5432/Sketch.io
    ports:
      - "9000:9000"
    depends_on:
      database:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://yaqoob:secretpassword@database:5432/Sketch.io
      JWT_SECRET: your_jwt_secret_here
      JWT_EXPIRES_IN: 1d
      FRONTEND_URL: http://localhost:3000
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:9000/health || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 3

  websocket:
    build:
      context: .
      dockerfile: docker/websocket.prod.Dockerfile
      args:
        DATABASE_URL: postgresql://yaqoob:secretpassword@database:5432/Sketch.io
    ports:
      - "8000:8000"
    depends_on:
      database:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://yaqoob:secretpassword@database:5432/Sketch.io
      JWT_SECRET: your_jwt_secret_here
    restart: unless-stopped

  database:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: yaqoob
      POSTGRES_PASSWORD: secretpassword
      POSTGRES_DB: Sketch.io
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U yaqoob -d Sketch.io"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:
